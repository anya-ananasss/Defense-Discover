name: Backend CI

on:
  push:
    branches: [main, 'develop', 'develop-*', 'develop/**']
    paths:
      - 'backend/**'
  pull_request:
    branches: [main, 'develop', 'develop-*', 'develop/**']
    paths:
      - 'backend/**'

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  build_java_services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ApiGateWay, ModelService, NotificationService, UserService]
    container:
      image: maven:3.9.6-eclipse-temurin-17
    defaults:
      run:
        working-directory: backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4
      - name: Build & Test ${{ matrix.service }}
        run: mvn clean install
    env:
      PROMT_CLIENT_URL: http://modelservice:8082
      ROLE_CLIENT_URL: http://userservice:8081
      STAT_CLIENT_URL: http://userservice:8081
      USER_CLIENT_URL: http://userservice:8081
      MAIL_HOST: smtp.mail.ru
      MAIL_PORT: 587
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

  build_python_service:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/ModelApiService
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest

  build_and_push_docker_images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [build_java_services, build_python_service]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: docker/setup-docker-action@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: |
          cd backend
          docker compose build

      - name: Push Docker images
        run: |
          cd backend
          docker compose push
    env:
      LLM_TOKEN: ${{ secrets.LLM_TOKEN }}
  deploy:

    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_docker_images
    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "backend/docker-compose.yml"
          target: ~/

      - name: SSH deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            export DOCKER_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            export DOCKER_PASSWORD="${{ secrets.DOCKERHUB_TOKEN }}"

            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            
            cd ~/backend
            docker compose down
            docker compose pull
            docker compose up -d
            docker system prune -f
    env:
      LLM_TOKEN: ${{ secrets.LLM_TOKEN }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}